package shinobi.arch.read_it.PostActivites;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import com.google.gson.Gson;
import com.squareup.picasso.Picasso;

import shinobi.arch.read_it.BaseActivity;
import shinobi.arch.read_it.Post.Post;
import shinobi.arch.read_it.Adapters.CommentAdapter;
import shinobi.arch.read_it.Adapters.PostAdapter;
import shinobi.arch.read_it.R;
import shinobi.arch.read_it.User.User;

public class DetailActivity extends BaseActivity {
    private CommentAdapter mCommentAdapter;
    private TextView titleTextView;
    private TextView authorTextView;
    private ImageView imageView;
    private TextView descriptionTextView;
    private Button deleteButton;
    private RecyclerView mRecyclerView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detail);
        init();

        String json = getIntent().getExtras().getString(PostAdapter.POST);
        Gson gson = new Gson();
        final Post post = gson.fromJson(json, Post.class);

        mCommentAdapter = new CommentAdapter(post.getComments());
        mRecyclerView.setAdapter(mCommentAdapter);

        if (post != null) {
            titleTextView.setText(post.getTitle());
            descriptionTextView.setText(post.getContent());
            authorTextView.setText(post.getAuthor().getUserName());
            Picasso.with(imageView.getContext()).load(post.getImageUrl()).into(imageView);
        }

        /**
         * On Click Listener for Delete Button
         * Deletes Current Post and redirects to Posts Page
         */
        deleteButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                allPosts.remove(post);
                User currentUser = users.get(post.getAuthor().getUserName());
                currentUser.removePost(post);
                Intent postIntent = new Intent(v.getContext(), PostsActivity.class);
                ref.removeEventListener(valueEventListener);
                v.getContext().startActivity(postIntent);
            }
        });
    }

    /**
     * Initialize All View Attributes
     */
    public void init() {
        titleTextView = (TextView) findViewById(R.id.titleDetailTextView);
        authorTextView = (TextView) findViewById(R.id.postAuthor);
        imageView = (ImageView) findViewById(R.id.imageView);
        descriptionTextView = (TextView) findViewById(R.id.descriptionTextView);
        deleteButton = (Button) findViewById(R.id.deleteButton);
        ref.addValueEventListener(valueEventListener);
        mRecyclerView = (RecyclerView) findViewById(R.id.recyclerView);
        mRecyclerView.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
    }

    /**
     * Runs When The Activity is Destroyed
     */
    @Override
    protected void onDestroy() {
        ref.removeEventListener(valueEventListener);
        super.onDestroy();
    }
}
